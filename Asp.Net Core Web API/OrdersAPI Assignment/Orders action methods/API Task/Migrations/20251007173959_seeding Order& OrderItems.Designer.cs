// <auto-generated />
using System;
using API_Task.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Task.Migrations
{
    [DbContext(typeof(OrdersContext))]
    [Migration("20251007173959_seeding Order& OrderItems")]
    partial class seedingOrderOrderItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Task.Models.Order", b =>
                {
                    b.Property<Guid>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = new Guid("2ed6362c-0837-4078-ad22-ede5e1066dd7"),
                            CustomerName = "Ayman",
                            OrderDate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "Order_2025_2",
                            TotalAmount = 7000.0
                        },
                        new
                        {
                            OrderID = new Guid("a68d26e4-40fb-4644-8d4c-4c1c42376202"),
                            CustomerName = "Ahmed",
                            OrderDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "Order_2025_1",
                            TotalAmount = 9000.0
                        });
                });

            modelBuilder.Entity("API_Task.Models.OrderItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("ItemId");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("826b5b2c-1f66-44f6-8960-7dd4de1febeb"),
                            OrderID = new Guid("a68d26e4-40fb-4644-8d4c-4c1c42376202"),
                            ProductName = "Jeans",
                            Quantity = 20,
                            TotalPrice = 600.0,
                            UnitPrice = 30.0
                        },
                        new
                        {
                            ItemId = new Guid("09531768-233d-4484-9552-c799c8c65534"),
                            OrderID = new Guid("2ed6362c-0837-4078-ad22-ede5e1066dd7"),
                            ProductName = "Jeans",
                            Quantity = 10,
                            TotalPrice = 200.0,
                            UnitPrice = 20.0
                        });
                });

            modelBuilder.Entity("API_Task.Models.OrderItem", b =>
                {
                    b.HasOne("API_Task.Models.Order", "order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });

            modelBuilder.Entity("API_Task.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
